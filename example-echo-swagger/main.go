package main

import (
	"net/http"

	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	echoSwagger "github.com/swaggo/echo-swagger"

	_ "github.com/yunkon-kim/echo-keycloak-example/example-echo-swagger/docs" // docs is generated by Swag CLI, you have to import it.
)

// @title Swagger Example API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

//	@securitydefinitions.oauth2.accessCode	OAuth2AccessCode
//	@tokenUrl								http://{your-doamin}/realms/{your-realm}/protocol/openid-connect/token
//	@authorizationUrl						http://{your-doamin}/realms/{your-realm}/protocol/openid-connect/auth
//	@scope.admin							Grants read and write access to administrative information

func main() {
	e := echo.New()
	// Middleware
	e.Use(middleware.Logger())
	e.Use(middleware.Recover())
	e.Use(middleware.CORS())

	// Routes
	e.GET("/", HealthCheck)

	oauthConfig := echoSwagger.OAuth(&echoSwagger.OAuthConfig{
		ClientId: "cb-frontend",
		Realm:    "cloud-barista",
		AppName:  "Echo, Swagger, Keycloak integration example",
	})
	echoWrapHandler := echoSwagger.EchoWrapHandler(oauthConfig)

	e.GET("/swagger/*", echoWrapHandler)
	e.GET("/swagger/oauth2-redirect.html", func(c echo.Context) error {
		return c.File("dist/oauth2-redirect.html")
	})

	e.Logger.Fatal(e.Start(":3000"))
}

// HealthCheck godoc
// @Summary Show the status of server.
// @Description get the status of server.
// @Tags root
// @Accept */*
// @Produce json
// @Success 200 {object} map[string]interface{}
// @Router / [get]
func HealthCheck(c echo.Context) error {
	return c.JSON(http.StatusOK, map[string]interface{}{
		"data": "Server is up and running",
	})
}
